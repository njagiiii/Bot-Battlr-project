{"ast":null,"code":"var _jsxFileName = \"/home/makena/Bot/src/Component/BotMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport BotCard from \"./BotCard\";\nimport BotSpecs from \"./BotSpecs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotMap = ({\n  data\n}) => {\n  _s();\n  const [selectCard, setselectCard] = useState(null);\n  const [showDetails, setshowDetails] = useState(false);\n\n  //function that handles the cardclick\n  const handleClick = bot => {\n    setselectCard(bot);\n    setshowDetails(true);\n  };\n\n  //function to handle bot close\n  const handleClose = () => {\n    setselectCard(null);\n    setshowDetails(false);\n  };\n  return (\n    /*#__PURE__*/\n    //  map through the data we have fetched\n    _jsxDEV(\"div\", {\n      style: {\n        marginTop: \"150px\"\n      },\n      children: data.map(item => /*#__PURE__*/_jsxDEV(BotCard, {\n        image: item.avatar_url,\n        name: item.name,\n        phrase: item.catchphrase,\n        health: item.health,\n        damage: item.damage,\n        armor: item.armor,\n        onClick: () => handleClick(item) //pass bot data when i click\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(BotMap, \"K2AKDAF9riPYCI2wt6iphof0U2I=\");\n_c = BotMap;\nexport default BotMap;\nvar _c;\n$RefreshReg$(_c, \"BotMap\");","map":{"version":3,"names":["React","useState","BotCard","BotSpecs","jsxDEV","_jsxDEV","BotMap","data","_s","selectCard","setselectCard","showDetails","setshowDetails","handleClick","bot","handleClose","style","marginTop","children","map","item","image","avatar_url","name","phrase","catchphrase","health","damage","armor","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/makena/Bot/src/Component/BotMap.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport BotCard from \"./BotCard\";\nimport BotSpecs from \"./BotSpecs\";\nconst BotMap = ({ data }) => {\n\n  const [selectCard, setselectCard] = useState(null);\n  const [showDetails, setshowDetails] = useState(false);\n\n  //function that handles the cardclick\n  const handleClick = (bot) => {\n    setselectCard(bot);\n    setshowDetails(true);\n  };\n\n  //function to handle bot close\n  const handleClose = () => {\n    setselectCard(null);\n    setshowDetails(false);\n  };\n  return (\n    //  map through the data we have fetched\n    <div style={{ marginTop: \"150px\" }}>\n      {data.map((item) => (\n        <BotCard\n          key={item.id}\n          image={item.avatar_url}\n          name={item.name}\n          phrase={item.catchphrase}\n          health={item.health}\n          damage={item.damage}\n          armor={item.armor}\n          onClick={() => handleClick(item)} //pass bot data when i click\n        />\n      ))}\n      {/* Render BotSpecs if the showDetails is true and a botcard has been selected */}\n      \n    </div>\n  );\n};\n\nexport default BotMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAE3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAMY,WAAW,GAAIC,GAAG,IAAK;IAC3BJ,aAAa,CAACI,GAAG,CAAC;IAClBF,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBL,aAAa,CAAC,IAAI,CAAC;IACnBE,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EACD;IAAA;IACE;IACAP,OAAA;MAAKW,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAQ,CAAE;MAAAC,QAAA,EAChCX,IAAI,CAACY,GAAG,CAAEC,IAAI,iBACbf,OAAA,CAACH,OAAO;QAENmB,KAAK,EAAED,IAAI,CAACE,UAAW;QACvBC,IAAI,EAAEH,IAAI,CAACG,IAAK;QAChBC,MAAM,EAAEJ,IAAI,CAACK,WAAY;QACzBC,MAAM,EAAEN,IAAI,CAACM,MAAO;QACpBC,MAAM,EAAEP,IAAI,CAACO,MAAO;QACpBC,KAAK,EAAER,IAAI,CAACQ,KAAM;QAClBC,OAAO,EAAEA,CAAA,KAAMhB,WAAW,CAACO,IAAI,CAAE,CAAC;MAAA,GAP7BA,IAAI,CAACU,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQb,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGC;EAAC;AAEV,CAAC;AAAC1B,EAAA,CAnCIF,MAAM;AAAA6B,EAAA,GAAN7B,MAAM;AAqCZ,eAAeA,MAAM;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}