{"ast":null,"code":"var _jsxFileName = \"/home/makena/Bot/my-app/src/Component/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport BotMap from './BotMap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotCollection = () => {\n  _s();\n  //create the state of the current data\n  const [data, setData] = useState([]);\n\n  //Fetch data\n  const fetchData = () => {\n    fetch('http://localhost:3000/bots').then(res => res.json()).then(data => setData(data)).catch(error => console.log('Error fetching', error));\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BotMap, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(BotCollection, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useEffect","useState","BotMap","jsxDEV","_jsxDEV","BotCollection","_s","data","setData","fetchData","fetch","then","res","json","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/makena/Bot/my-app/src/Component/BotCollection.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport BotMap from './BotMap';\n\nconst BotCollection = () => {\n\n //create the state of the current data\n  const [data, setData] =useState([]);\n \n  //Fetch data\n  const fetchData =() => {\n  fetch('http://localhost:3000/bots')\n  .then((res) => res.json())\n  .then((data) => setData(data))\n  .catch((error) => console.log('Error fetching',error));\n  }\n\n  useEffect(() => {\n    fetchData();\n  },[])\n  \n  return (\n    <div>\n       <BotMap data={data}/> \n    </div>\n  )\n}\n\nexport default BotCollection;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE3B;EACC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAEP,QAAQ,CAAC,EAAE,CAAC;;EAEnC;EACA,MAAMQ,SAAS,GAAEA,CAAA,KAAM;IACvBC,KAAK,CAAC,4BAA4B,CAAC,CAClCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEJ,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC,CAC7BO,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAACF,KAAK,CAAC,CAAC;EACtD,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdS,SAAS,CAAC,CAAC;EACb,CAAC,EAAC,EAAE,CAAC;EAEL,oBACEL,OAAA;IAAAc,QAAA,eACGd,OAAA,CAACF,MAAM;MAACK,IAAI,EAAEA;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV,CAAC;AAAAhB,EAAA,CAtBKD,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAwBnB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}