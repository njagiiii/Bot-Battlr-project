{"ast":null,"code":"var _jsxFileName = \"/home/makena/Bot/src/Component/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport BotMap from \"./BotMap\";\nimport BotSpecs from \"./BotSpecs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotCollection = () => {\n  _s();\n  //create the state of the current data\n  const [data, setData] = useState([]);\n  const [selectCard, setselectCard] = useState(null);\n\n  // create a function to pass to its children(clicking to open the card)\n  const handleclick = card => {\n    setselectCard(card);\n  };\n\n  //  Function to close the card\n\n  const handleclose = card => {\n    selectCard(null);\n  };\n\n  //Fetch data\n  const fetchData = () => {\n    fetch(\"http://localhost:3000/bots\").then(res => res.json()).then(data => setData(data)).catch(error => console.log(\"Error fetching\", error));\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BotSpecs, {\n      specscard: selectCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotMap, {\n      data: data,\n      onCardClick: han\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(BotCollection, \"cQfqctc0lqmciHqVjeFeIlFBMqI=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useEffect","useState","BotMap","BotSpecs","jsxDEV","_jsxDEV","BotCollection","_s","data","setData","selectCard","setselectCard","handleclick","card","handleclose","fetchData","fetch","then","res","json","catch","error","console","log","children","specscard","fileName","_jsxFileName","lineNumber","columnNumber","onCardClick","han","_c","$RefreshReg$"],"sources":["/home/makena/Bot/src/Component/BotCollection.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport BotMap from \"./BotMap\";\nimport BotSpecs from \"./BotSpecs\";\n\nconst BotCollection = () => {\n  //create the state of the current data\n  const [data, setData] = useState([]);\n  const [selectCard, setselectCard] = useState(null);\n\n  // create a function to pass to its children(clicking to open the card)\n  const handleclick = (card) => {\n    setselectCard(card);\n  };\n\n  //  Function to close the card\n\n  const handleclose = (card) => {\n    selectCard(null);\n  };\n\n  //Fetch data\n  const fetchData = () => {\n    fetch(\"http://localhost:3000/bots\")\n      .then((res) => res.json())\n      .then((data) => setData(data))\n      .catch((error) => console.log(\"Error fetching\", error));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <BotSpecs specscard={selectCard} /> \n      <BotMap data={data} onCardClick={han}/>\n    </div>\n  );\n};\n\nexport default BotCollection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,MAAMW,WAAW,GAAIC,IAAI,IAAK;IAC5BF,aAAa,CAACE,IAAI,CAAC;EACrB,CAAC;;EAED;;EAEA,MAAMC,WAAW,GAAID,IAAI,IAAK;IAC5BH,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;;EAED;EACA,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACtBC,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAET,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC,CAC7BY,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,KAAK,CAAC,CAAC;EAC3D,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACde,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACF,QAAQ;MAACsB,SAAS,EAAEf;IAAW;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCxB,OAAA,CAACH,MAAM;MAACM,IAAI,EAAEA,IAAK;MAACsB,WAAW,EAAEC;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAACtB,EAAA,CAlCID,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}