{"ast":null,"code":"var _jsxFileName = \"/home/makena/Bot/src/Component/BotCollection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport BotMap from \"./BotMap\";\nimport BotSpecs from \"./BotSpecs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimpor;\nconst BotCollection = () => {\n  _s();\n  //create the state of the current data\n  const [data, setData] = useState([]);\n\n  // create state of the selected card\n  const [selectedCard, setselectedCard] = useState(null);\n\n  //  function that handles the display of the selectedcard\n  const handleClick = card => {\n    setselectedCard(card);\n  };\n\n  //  function to close the selected card\n  const handleClose = () => {\n    setselectedCard(null);\n  };\n\n  //Fetch data\n  const fetchData = () => {\n    fetch(\"http://localhost:3000/bots\").then(res => res.json()).then(data => setData(data)).catch(error => console.log(\"Error fetching\", error));\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedCard ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      card: selectedCard,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(BotMap, {\n      data: data,\n      onCardClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(BotCollection, \"XucwYl0edTcjDAcLZDMDixbHUvM=\");\n_c = BotCollection;\nexport default BotCollection;\nvar _c;\n$RefreshReg$(_c, \"BotCollection\");","map":{"version":3,"names":["React","useEffect","useState","BotMap","BotSpecs","jsxDEV","_jsxDEV","impor","BotCollection","_s","data","setData","selectedCard","setselectedCard","handleClick","card","handleClose","fetchData","fetch","then","res","json","catch","error","console","log","children","onClose","fileName","_jsxFileName","lineNumber","columnNumber","onCardClick","_c","$RefreshReg$"],"sources":["/home/makena/Bot/src/Component/BotCollection.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport BotMap from \"./BotMap\";\nimport BotSpecs from \"./BotSpecs\";\nimpor\nconst BotCollection = () => {\n  //create the state of the current data\n  const [data, setData] = useState([]);\n\n  // create state of the selected card\n     const [selectedCard , setselectedCard] = useState(null)\n\n    //  function that handles the display of the selectedcard\n     const handleClick = (card) => {\n      setselectedCard(card)\n     }\n\n    //  function to close the selected card\n     const handleClose = () => {\n      setselectedCard(null)\n     }\n \n  //Fetch data\n  const fetchData = () => {\n    fetch(\"http://localhost:3000/bots\")\n      .then((res) => res.json())\n      .then((data) => setData(data))\n      .catch((error) => console.log(\"Error fetching\", error));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {/* if card is selected render on the BotSpecs */}\n      {selectedCard ? (\n        <BotSpecs card={selectedCard}  onClose={handleClose}/>\n      ) : (\n        <BotMap data={data} onCardClick={handleClick}/>\n      )}     \n    </div>\n  );\n};\n\nexport default BotCollection;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClCC,KAAK;AACL,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACG,MAAM,CAACU,YAAY,EAAGC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACC,MAAMY,WAAW,GAAIC,IAAI,IAAK;IAC7BF,eAAe,CAACE,IAAI,CAAC;EACtB,CAAC;;EAEF;EACC,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACzBH,eAAe,CAAC,IAAI,CAAC;EACtB,CAAC;;EAEJ;EACA,MAAMI,SAAS,GAAGA,CAAA,KAAM;IACtBC,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAET,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC,CAC7BY,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,KAAK,CAAC,CAAC;EAC3D,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdgB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAoB,QAAA,EAEGd,YAAY,gBACXN,OAAA,CAACF,QAAQ;MAACW,IAAI,EAAEH,YAAa;MAAEe,OAAO,EAAEX;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,gBAEtDzB,OAAA,CAACH,MAAM;MAACO,IAAI,EAAEA,IAAK;MAACsB,WAAW,EAAElB;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAC/C;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CAvCID,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}